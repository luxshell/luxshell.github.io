<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Golang on Lucas - An InfoSec Lover</title>
    <link>https://luxshell.ml/tags/golang/</link>
    <description>Recent content in Golang on Lucas - An InfoSec Lover</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>Lucas Wilson</copyright>
    <lastBuildDate>Sat, 13 Oct 2018 14:29:50 +0800</lastBuildDate>
    
	<atom:link href="https://luxshell.ml/tags/golang/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Golang基于ssh实现动态端口转发</title>
      <link>https://luxshell.ml/post/go_ssh_dynamic_tunnel/</link>
      <pubDate>Sat, 13 Oct 2018 14:29:50 +0800</pubDate>
      
      <guid>https://luxshell.ml/post/go_ssh_dynamic_tunnel/</guid>
      <description>&lt;p&gt;最近在网路上看到golang基于ssh实现本地端口转发和远程端口转发的案例，可就是没有找到动态端口转发的例子，于是自己亲自实现一个。仔细琢磨了一下，其实从原理出发，动态端口转发其实就是一个本地端口转发的一个变种，本地端口只需将流量转发的固定的一个端口，而动态端口转发则基于代理功能可将数据转发到任意主机任意端口。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Msf正反向meterpreter会话的巧妙结合</title>
      <link>https://luxshell.ml/post/msf_bind_reverse_meter/</link>
      <pubDate>Wed, 03 Oct 2018 22:19:19 +0800</pubDate>
      
      <guid>https://luxshell.ml/post/msf_bind_reverse_meter/</guid>
      <description>&lt;p&gt;测试机器及被测试机器往往大多数情况下都在内网环境下，而且客户的网络边界甚至主机都部署有防火墙，入站请求几乎不怎么灵光，于是广泛流行起了反弹连接，对方机器是否拥有公网ip都能完成操作，主流防火墙对出站请求管理更棘手，反弹具有天生的优势。于是，很多从业人员选择购买一台具有公网IP的服务器，可以通过远程端口转发本地的服务端口到VPS达到接受反弹连接的要求，也可直接在VPS安装需要的服务，本博文要带给各位的是另一种模式。msf软件服务在本地，两边主机分别向VPS发起连接。
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>golang实现简易出口IP查看器</title>
      <link>https://luxshell.ml/post/my_external_ip_address/</link>
      <pubDate>Mon, 17 Sep 2018 23:00:53 +0800</pubDate>
      
      <guid>https://luxshell.ml/post/my_external_ip_address/</guid>
      <description>&lt;p&gt;出于乐趣，想做一个简易的出口IP查看器，放到自己的VPS上，可以随时查看自己的IP信息，顺便学习golang实现简单http服务器。与各位分享。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>